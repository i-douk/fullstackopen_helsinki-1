name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
        if: ${{ contains(toJson(github.event.commits.*.message), 'skip') == false && github.ref == 'refs/heads/main' }}
        runs-on: ubuntu-20.04
        steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: '20'
        - name: Install dependencies backend
          run: npm install
          working-directory: part3/backend
        - name: Install dependencies frontend
          run: npm install
          working-directory: part2/phonebook
        - name: Build UI
          run: npm run build:ui
          working-directory: part2/phonebook
        - name: Push Dist
          run: run git add . && git commit -m "ci push dist" && git push
          working-directory: part3/backend
        - name: Start project
          run: npm start
          working-directory: part3/backend
        - name: Trigger deployment
          run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
        
        # - name: Test Success
        #   uses: rjstone/discord-webhook-notify@v1
        #   if: ${{ success() }}
        #   with:
        #     severity: info
        #     color: '#008000'
        #     text: Success.
        #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
        # - name: Test Failure
        #   uses: rjstone/discord-webhook-notify@v1
        #   if: ${{ failure() }}
        #   with:
        #       severity: info
        #       color: '#FF0000'
        #       text: Failure
        #       webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

       
  tag_release:
    env: 
      COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
    if: ${{ contains(toJson(github.event.commits.*.message), 'skip') == false && github.ref == 'refs/heads/main' }}
    needs: [deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.69.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V : true
          PATCH_STRING_TOKEN: true
          DRY_RUN : true

  a_test_job:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: github context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: commits
      env:
        COMMITS: ${{ toJson(github.event.commits) }}
      run: echo "$COMMITS"
    - name: commit messages
      env:
        COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
      run: echo "$COMMIT_MESSAGES"
    